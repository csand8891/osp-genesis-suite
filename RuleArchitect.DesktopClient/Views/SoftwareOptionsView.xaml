<UserControl x:Class="RuleArchitect.DesktopClient.Views.SoftwareOptionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:RuleArchitect.DesktopClient.Views"
             xmlns:vm="clr-namespace:RuleArchitect.DesktopClient.ViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:RuleArchitect.DesktopClient.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             d:DataContext="{d:DesignInstance Type=vm:SoftwareOptionsViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="600" d:DesignWidth="1000"
             Unloaded="SoftwareOptionsView_Unloaded">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="/Themes/CustomTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanNegationConverter x:Key="BooleanNegationConverter"/>
            <converters:NullToBooleanConverter x:Key="NullToFalseConverter" FalseForNull="True"/>
            <Style x:Key="FilterTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
                <Setter Property="Margin" Value="0,0,10,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Width" Value="250"/>
                <Setter Property="Height" Value="48"/>
                <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
            </Style>
            <Style x:Key="FilterComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="Margin" Value="0,0,10,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Width" Value="220"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <materialDesign:DialogHost Identifier="SoftwareOptionsDialogHost" CloseOnClickAway="True">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0"
                       Text="Software Options" 
                       Style="{StaticResource MaterialDesignHeadline6TextBlock}" 
                       Foreground="{DynamicResource PrimaryHueDarkBrush}"
                       Margin="16,16,16,12"/>

            <Border Grid.Row="1" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="0,0,0,1" CornerRadius="{DynamicResource ButtonCornerRadius}" >
                <ToolBarTray Background="{DynamicResource MaterialDesignPaper}">
                    <ToolBar Style="{DynamicResource MaterialDesignToolBar}" Background="Transparent" ClipToBounds="False" >
                        <Button Command="{Binding LoadCommand}" ToolTip="Refresh Software Options" Style="{StaticResource MaterialDesignToolButton}">
                            <materialDesign:PackIcon Kind="Refresh" />
                        </Button>
                        <Separator/>
                        <Button Command="{Binding AddCommand}" ToolTip="Add New Software Option" Style="{StaticResource MaterialDesignToolButton}">
                            <materialDesign:PackIcon Kind="PlusOutline"/>
                        </Button>
                        <Button Command="{Binding DeleteCommand}" ToolTip="Delete Selected Software Option"
                                IsEnabled="{Binding SelectedSoftwareOption, Converter={StaticResource NullToFalseConverter}}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{DynamicResource MaterialDesignValidationErrorBrush}">
                            <materialDesign:PackIcon Kind="TrashCanOutline"/>
                        </Button>
                        <Separator />
                        <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                 materialDesign:HintAssist.Hint="Search Options..."
                                 Style="{StaticResource FilterTextBoxStyle}"/>

                        <ComboBox ItemsSource="{Binding AllControlSystemsForFilter}"
                                  SelectedValue="{Binding SelectedFilterControlSystemId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Null}}"
                                  DisplayMemberPath="Name"
                                  SelectedValuePath="ControlSystemId"
                                  materialDesign:HintAssist.Hint="Filter by Control System"
                                  Style="{StaticResource FilterComboBoxStyle}"/>

                    </ToolBar>
                </ToolBarTray>
            </Border>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding MasterPaneColumnWidth, Mode=OneWay}" MinWidth="350" x:Name="MasterColumn"/>
                    <ColumnDefinition Width="{Binding SplitterActualColumnWidth, Mode=OneWay}" x:Name="SplitterColumn"/>
                    <ColumnDefinition Width="{Binding DetailPaneColumnWidth, Mode=OneWay}" MinWidth="0" x:Name="DetailColumn"/>
                </Grid.ColumnDefinitions>

                <DataGrid Grid.Column="0" ItemsSource="{Binding FilteredSoftwareOptionsView}" SelectedItem="{Binding SelectedSoftwareOption}"
                          AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True"
                          SelectionMode="Single"
                          Style="{StaticResource MaterialDesignDataGrid}"
                          materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                          materialDesign:DataGridAssist.ColumnHeaderPadding="8"
                          BorderThickness="0" GridLinesVisibility="Horizontal" Margin="16,16,0,16">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Primary Name" Binding="{Binding PrimaryName}" Width="2*" SortMemberPath="PrimaryName"/>
                        <DataGridTextColumn Header="Option #" Binding="{Binding PrimaryOptionNumberDisplay}" Width="*" SortMemberPath="PrimaryOptionNumberDisplay"/>
                        <DataGridTextColumn Header="Control System" Binding="{Binding ControlSystemName}" Width="*" SortMemberPath="ControlSystemName"/>
                        <DataGridTextColumn Header="Version" Binding="{Binding Version}" Width="Auto" SortMemberPath="Version"/>
                    </DataGrid.Columns>
                </DataGrid>

                <GridSplitter Grid.Column="1"
                              Width="5"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Background="{DynamicResource MaterialDesignDivider}" 
                              ResizeBehavior="PreviousAndNext"
                              IsEnabled="{Binding IsDetailPaneVisible}"
                              Visibility="{Binding SplitterVisibility}"/>

                <Border Grid.Column="2" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="1,0,0,0"
                        Visibility="{Binding IsDetailPaneVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">

                    <materialDesign:Card MinWidth="0" Padding="0" Margin="0,16,16,16" UniformCornerRadius="8" 
                                         materialDesign:ElevationAssist.Elevation="Dp4">
                        <!-- The EditSoftwareOptionView is self-contained and has its own action buttons. -->
                        <local:EditSoftwareOptionView DataContext="{Binding CurrentEditSoftwareOption}" />
                    </materialDesign:Card>
                </Border>
            </Grid>

            <!-- Loading Overlay -->
            <Grid Grid.Row="0" Grid.RowSpan="3" Background="#4CFFFFFF"
                  Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                <ProgressBar IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}" Width="50" Height="50" />
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</UserControl>
